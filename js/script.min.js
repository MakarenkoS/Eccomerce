class SearchForm{constructor(t){this.inputElement=t.querySelector(".search-form__input"),this.searchModal=t.querySelector(".search-form__modal-wrapper"),this.subject=t.querySelector(".search-form__subject"),this.inputElement.addEventListener("search",t=>{this.onInputSearch(t)})}onInputSearch(t){this.searchModal.classList.remove("search-form__modal-wrapper--hidden"),this.subject.innerText=t.currentTarget.value,setTimeout(()=>{this.searchModal.classList.add("search-form__modal-wrapper--hidden")},1500)}}let searchForm=new SearchForm(document.querySelector(".search-form"));class TreeList{constructor(t){t.addEventListener("click",t=>this.onTreeItemClick(t))}onTreeItemClick(t){const e=t.target.closest("li"),s=e.querySelector(".caret");if(s&&s.classList.toggle("caret--open"),e){const t=e.querySelector(".nested");if(t){"none"===getComputedStyle(t).display?t.style.display="block":t.style.display="none"}}}}class SortFilter{constructor(t){this.filter=t,t.addEventListener("click",t=>this.onFilterClick(t))}onFilterClick(t){const e=t.target;t.target.classList.contains("filters__name")&&e.parentNode.classList.toggle("filters__field--collapsed")}}let tree=new TreeList(document.querySelector(".categories__list--main-list")),filters=new SortFilter(document.querySelector(".departments__filters"));class Storage{constructor(){this.initialStorage=[{id:0,name:"Vintage Typewriter",quantity:1,price:"49.50"},{id:1,name:"Lee Pucker design",quantity:2,price:"12.50"}],this.storage=this.initialStorage,this.setItems(this.storage)}setItems(t){localStorage.setItem("Shop storage",JSON.stringify(t))}getItems(){return JSON.parse(localStorage.getItem("Shop storage"))}addItem(t){const e=this.getElementNameId(t.name,this.storage);if(-1!==e)this.changeQuantity(e,1);else{let e={name:t.name,price:t.price,quantity:1,id:this.storage.length};this.storage=[...this.storage,e],this.setItems(this.storage)}}removeItem(t){this.storage=this.storage.filter(e=>e.id!==t),this.storage.forEach((t,e)=>{t.id=e}),this.setItems(this.storage)}getElementNameId(t,e){let s=-1;return e.forEach((e,a)=>{e.name===t&&(s=a)}),s}changeQuantity(t,e){this.storage[t].quantity+=e,this.storage[t].quantity<=0&&this.removeItem(t),this.setItems(this.storage)}}class Basket{constructor(t,e){this.storage=new Storage,this.basket=t,this.cardButton=t.querySelector(".user__button--cart"),this.modalWrapper=t.querySelector(".user__basket-wrapper"),this.modalWindow=t.querySelector(".user__basket"),this.basketList=t.querySelector(".basket__list"),this.basketTotalPrice=t.querySelector(".basket__total-price"),this.basketQuantity=t.querySelector(".user__items-quantity"),this.goodsList=e,this.setBasketQuantity(this.storage.getItems()),this.cardButton.addEventListener("click",t=>this.onCardButtonClick(t)),this.modalWrapper.addEventListener("click",t=>this.onModalClick(t)),this.goodsList.addEventListener("click",t=>this.onGoodsCardClick(t))}onCardButtonClick(t){this.modalWrapper.classList.remove("user__basket-wrapper--hidden"),this.renderBasket()}setBasketQuantity(t){let e=0;t.length>0?(this.basketQuantity.classList.add("user__items-quantity--show"),t.forEach(t=>e+=t.quantity),this.basketQuantity.innerHTML=e):this.basketQuantity.classList.remove("user__items-quantity--show")}onModalClick(t){const e=t.target;if(e.parentNode.closest("div")!==this.modalWindow)this.modalWrapper.classList.add("user__basket-wrapper--hidden");else if("BUTTON"===e.tagName){const t=this.defineAction(e);this.performAction(t)}}performAction({id:t,action:e}){switch(e){case"REMOVE":this.storage.removeItem(+t);break;case"INC":this.storage.changeQuantity(+t,-1);break;case"DEC":this.storage.changeQuantity(+t,1)}this.renderBasket()}defineAction(t){let e={id:void 0,action:void 0};switch(e.id=t.closest("li").dataset.id,t.className){case"cart-item__button-close":e.action="REMOVE";break;case"cart-item__quantity-button--inc":e.action="INC";break;case"cart-item__quantity-button--dec":e.action="DEC"}return e}renderBasket(){let t=this.storage.getItems();this.setBasketQuantity(t),this.basketList.innerHTML="";let e=0;if(0===t.length){let t=document.createElement("li");t.classList.add("cart-item__empty"),t.innerHTML="Cart is Empty!",this.basketList.append(t)}else this.renderElement(t.map(t=>{let s=this.renderElement(t);e+=t.price*t.quantity,this.basketList.append(s)}));this.basketTotalPrice.innerHTML=e.toFixed(2)+"$"}renderElement(t){let e=document.createElement("li");return e.classList.add("basket__cart-item","cart-item"),e.setAttribute("data-id",t.id),e.innerHTML=`\n    <span class="cart-item__name">${t.name}</span>\n                    <p class="cart-item__quantity--wrapper">                   \n                      <button class="cart-item__quantity-button--inc">-</button>\n                      <span class="cart-item__quantity">${t.quantity}</span>   \n                      <button class="cart-item__quantity-button--dec">+</button>\n                    </p>\n                    <span class="cart-item__price">${t.price}$</span>\n                    <button class="cart-item__button-close">x</button>\n    `,e}onGoodsCardClick(t){const e=t.target.closest(".card");if(e){const{name:t,price:s}=this.defineCardParams(e);this.storage.addItem({name:t,price:s}),this.renderBasket()}}defineCardParams(t){const e={};return e.name=t.querySelector(".card__name-for-basket").innerHTML,e.price=t.querySelector(".card__price").innerHTML.slice(1),e}}const basket=new Basket(document.querySelector(".user"),document.querySelector(".cards__list"));